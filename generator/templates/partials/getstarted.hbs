<ol>
<li>Decide which core library you want to use: 
<ul>
<li>Bootstrap</li>
<li>jQuery UI</li>
<li>only jQuery (+ Poshytip)</li>
</ul>
<br>
<p>Include it on your page. Examples below are for <i>bootstrap</i>:</p> 
{{#source}}
<link href="path/to/bootstrap/css/bootstrap.css" rel="stylesheet">
<script src="path/to/bootstrap/js/bootstrap.js"></script>           
{{/source}}
</li>
<li>Download corresponding X-editable build from <a href="index.html">Home</a><br><br></li>
<li>Include <i>popup</i> or <i>inline</i> version of X-editable (css equal for both):<br>
popup
{{#source}}
<link href="bootstrap-editable/css/bootstrap-editable.css" rel="stylesheet">
<script src="bootstrap-editable/js/bootstrap-editable.js"></script> 
{{/source}}
inline
{{#source}}
<link href="bootstrap-editable/css/bootstrap-editable.css" rel="stylesheet">
<script src="bootstrap-editable/js/bootstrap-editable-inline.js"></script>           
{{/source}}
</li>
<li>Markup elements that should be editable. Usually it is <code>&lt;A&gt;</code> element with additional <code>data-*</code> attributes
{{#source}}                                                                                                            
<a href="#" id="username" data-type="text" data-pk="1" data-url="post.php" data-original-title="Enter username">superuser</a>
{{/source}}
</li>
<li>Apply <strong>editable()</strong> method to elements
{{#source}}
$('#username').editable();
{{/source}}                                               
Alternatively, you can set all options via javascript
{{#source}}
<a href="#" id="username">superuser</a>   
{{/source}}
{{#source}}
$('#username').editable({
    type: 'text',
    pk: 1,
    url: 'post.php',
    title: 'Enter username'
});
{{/source}}                                                          
</li>
<li>That's it! Open your page and click on element. You will see form that can send ajax request with new value on <code>post.php</code>.<br>
Request will be something like:
{{#source}}
POST post.php
{
    name:  'username',  //name of field (column in db)
    pk:    1            //primary key (record id)
    value: 'superuser!' //new value
}
{{/source}}
</li>
<li>* You may use <strong>editableContainer()</strong> method if you need stand-alone container with form (but not element that stores value).<br>
Container is attached to element only for positioning. You can show/hide it manually, set value via options and subscribe to events (save/cancel).
</li>
</ol>